#! /usr/bin/python
#	Copyright (c) 2014, Madd Games.
#	All rights reserved.
#	
#	Redistribution and use in source and binary forms, with or without
#	modification, are permitted provided that the following conditions are met:
#	
#	* Redistributions of source code must retain the above copyright notice, this
#	  list of conditions and the following disclaimer.
#	
#	* Redistributions in binary form must reproduce the above copyright notice,
#	  this list of conditions and the following disclaimer in the documentation
#	  and/or other materials provided with the distribution.
#	
#	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#	AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#	IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#	DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
#	FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#	DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#	CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#	OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#	OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import sys, os
import subprocess
import json

def assertCommand(cmd, msg = None):
	if msg is None:
		msg = "checking for %s... " % cmd
	sys.stderr.write(msg)
	sys.stderr.flush()

	output = ""
	try:
		output = subprocess.check_output("command -v %s" % cmd, shell=True)
	except:
		pass

	if output == "":
		sys.stderr.write("\n%s: command not found: %s\n" % (sys.argv[0], cmd))
		sys.exit(1)
	else:
		sys.stderr.write(output)

# Make sure all the tools we need are here
assertCommand("x86_64-elf-gcc")
assertCommand("nasm")

config = {}

# Write the configuration to config.json
f = open("config.json", "wb")
json.dump(config, f)
f.close()

# Create a Makefile
f = open("Makefile", "wb")
f.write(".PHONY: all\n")
f.write("all:\n")
f.write("\tpython build.py\n")
f.close()
