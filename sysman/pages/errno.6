>NAME

errno - system error numbers

>SYNOPSIS

	#include <errno.h>

>DESCRIPTION

The '<errno.h>' header defines a macro called 'errno' which evaluates to an lvalue of type 'int'. It can thus be viewed as a normal integer variable, except that it is thread-local: setting its value in one thread does not change its value as seen by other threads. This variable is set by library functions and system calls when they report errors. It may also be changed by a successful function.

This header also defines macros representing error numbers (to which 'errno' may be set). All error numbers are nonzero and distinct from each other; except *EAGAIN* and *EWOULDBLOCK* - those have the same value under Glidix. On other operating systems, it is unspecified whether *EAGAIN* and *EWOULDBLOCK* have the same value; it may or may not be the case.

The function [strerror.2] may be used to obtain a human-readable error message from an error number. The function [perror.2] can be used to conveniently print errors.
\* *E2BIG* - Argument list too long.
\* *EACCES* - Access denied.
\* *EADDRINUSE* - Address in use.
\* *EADDRNOTAVAIL* - Address not available.
\* *EAFNOSUPPORT* - Address family not supported.
\* *EAGAIN* - Resource unavailable, try again.
\* *EALREADY* - Connection already in progress.
\* *EBADF* - Bad file descriptor.
\* *EBADMSG* - Bad message.
\* *EBUSY* - Device or resource busy.
\* *ECANCELED* - Operation canceled.
\* *ECHILD* - No child processes.
\* *ECONNABORTED* - Connection aborted.
\* *ECONNREFUSED* - Connection refused.
\* *ECONNRESET* - Connection reset.
\* *EDEADLK* - Resource deadlock would occur.
\* *EDESTADDRREQ* - Destination address required.
\* *EDOM* - Mathematics argument out of domain of function.
\* *EDQUOT* - Reserved.
\* *EEXIST* - File exists.
\* *EFAULT* - Bad address.
\* *EFBIG* - File too large.
\* *EHOSTUNREACH* - Host is unreachable.
\* *EIDRM* - Identifier removed.
\* *EILSEQ* - Illegal byte sequence.
\* *EINPROGRESS* - Operation in progress.
\* *EINTR* - Interrupted function.
\* *EINVAL* - Invalid argument.
\* *EIO* - I/O error.
\* *EISCONN* - Socket is connected.
\* *EISDIR* - Is a directory.
\* *ELOOP* - Too many levels of symbolic links.
\* *EMFILE* - Too many open files.
\* *EMLINK* - Too many links.
\* *EMSGSIZE* - Message too large.
\* *EMULTIHOP* - Reserved.
\* *ENAMETOOLONG* - Filename too long.
\* *ENETDOWN* - Network is down.
\* *ENETRESET* - Connection aborted by network.
\* *ENETUNREACH* - Network unreachable.
\* *ENFILE* - Too many files open in system.
\* *ENOBUFS* - No buffer space available.
\* *ENODATA* - No message is available on the STREAM head read queue.
\* *ENODEV* - No such device.
\* *ENOENT* - No such file or directory.
\* *ENOEXEC* - Executable file format error.
\* *ENOLCK* - No locks available.
\* *ENOLINK* - Reserved.
\* *ENOMEM* - Not enough space.
\* *ENOMSG* - No message of the desired type.
\* *ENOPROTOOPT* - Protocol not available.
\* *ENOSPC* - No space left on device.
\* *ENOSR* - No STREAM resources.
\* *ENOSTR* - Not a STREAM.
\* *ENOSYS* - Function not supported.
\* *ENOTCONN* - The socket is not connected.
\* *ENOTDIR* - Not a directory.
\* *ENOTEMPTY* - Directory not empty.
\* *ENOTSOCK* - Not a socket.
\* *ENOTSUP* - Not supported.
\* *ENOTTY* - Inappropriate I/O control operation.
\* *ENXIO* - No such device or address.
\* *EOPNOTSUPP* - Operation not supported on socket.
\* *EOVERFLOW* - Value too large to be stored in data type.
\* *EPERM* - Operation not permitted.
\* *EPIPE* - Broken pipe.
\* *EPROTO* - Protocol error.
\* *EPROTONOSUPPORT* - Protocol not supported.
\* *EPROTOTYPE* - Protocol wrong type for socket.
\* *ERANGE* - Result too large.
\* *EROFS* - Read-only file system.
\* *ESPIPE* - Invalid seek.
\* *ESRCH* - No such process.
\* *ESTALE* - Reserved.
\* *ETIME* - Timer expired.
\* *ETIMEDOUT* - Connection timed out.
\* *ETXTBSY* - Text file busy.
\* *EWOULDBLOCK* - Same as *EAGAIN*.
\* *EXDEV* - Cross-device link.

>SEE ALSO
[strerror.2], [perror.2]
